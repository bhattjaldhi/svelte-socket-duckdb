version: '3.8'

services:
  flask:
    build:
      context: ./flask-server
    ports:
      - "5000:5000"
    volumes:
      - ./flask-server:/app
    environment:
      - FLASK_ENV=production
      - REDIS_URL=redis://redis-main:6379/0
    depends_on:
      redis-main:
        condition: service_healthy
    networks:
      - app-network
    restart: always

  svelte:
    build:
      context: ./svelte-app
      args:
        - SERVER_URL=${SERVER_URL}
    ports:
      - "3000:3000"
    environment:
      - SERVER_URL=${SERVER_URL}
    networks:
      - app-network
    restart: always

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./svelte-app/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - flask
      - svelte
    networks:
      - app-network
    restart: always

  redis-main:
    image: redis:${REDIS_VERSION:-6.0.7}
    container_name: redis-main
    restart: always
    volumes:
      - redis_main:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - 6379:6379  # Optional, you can remove this if external access is not needed

  redis-secondary:
    image: redis:${REDIS_VERSION:-6.0.7}
    container_name: redis-secondary
    restart: always
    volumes:
      - redis_secondary:/data
    ports:
      - 6479:6379  # Optional, you can remove this if external access is not needed
    command: redis-server --slaveof redis-main 6379
    networks:
      - app-network
    depends_on:
      redis-main:
        condition: service_healthy

volumes:
  redis_main:
  redis_secondary:

networks:
  app-network:
    driver: bridge
